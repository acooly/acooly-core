<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<!--
		如果不定义webAppRootKey参数，那么webAppRootKey就是缺省的"webapp.root"。但最好设置，以免项目之间的名称冲突。
		定义以后，在Web Container启动时将把ROOT的绝对路径写到系统变量里。
		然后log4j的配置文件里就可以用${ webapp.root }来表示Web目录的绝对路径，把log文件存放于webapp中,便于在线访问。
		此参数用于后面的“Log4jConfigListener”-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.root</param-value>
	</context-param>

	<!-- 設定Spring Context的默认Profile -->
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>dev</param-value>
	</context-param>

	<!--Spring ApplicationContext配置文件的路径。可使用通配符，多个路径用逗号分隔。
		此参数用于后面的“Spring-Context loader”-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/*servlet.xml,
			classpath:spring/applicationContext-main.xml		
		</param-value>
	</context-param>

	<!--由Sprng载入的Log4j配置文件位置-->
	<context-param>
		<param-name>logConfigLocation</param-name>
		<param-value>classpath:logback.xml</param-value>
	</context-param>

	<!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond, 用于在线动态修改log4j日志-->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>30000</param-value>
	</context-param>

	<!--jstl 默认i18n资源文件-->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>i18n/messages</param-value>
	</context-param>


	<!-- acooly-module-extremeTable组件配置 ExtremeTable 表格标签的 Properties文件 -->
	<!-- 
		<context-param>
			<param-name>extremecomponentsPreferencesLocation</param-name>
			<param-value>/conf/extremetable.properties</param-value>
		</context-param>
		<context-param>
			<param-name>extremecomponentsMessagesLocation</param-name>
			<param-value>i18n/messages</param-value>
		</context-param>
		 -->
    
	<!--Intergration log4j/slf4j/commons-logger/jdk14-logger to log4j -->
	<listener>
		<listener-class>com.acooly.core.common.web.integrator.LogbackIntergrationListener</listener-class>
	</listener>

	<!--Spring Context loader-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    
    
	<!--famous Character Encoding filter-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>		
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Hibernate Open Session in View Filter-->
	<!-- Open Entity Manager in View filter -->
	<filter>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>	
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>/services/*</url-pattern>
	</filter-mapping>		
	
	<!-- druid数据源Web监控配置 -->
	<filter>
		<filter-name>druidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>/druid*,*.jsp</param-value>
		</init-param>
		<init-param>
			<param-name>principalSessionName</param-name>
			<param-value>sessionInfo</param-value>
		</init-param>
		<init-param>
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>druidWebStatFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	
	
	<!-- acooly-module-security组件 Shiro Security filter -->
	<!-- 
		<filter>
			<filter-name>shiroFilter</filter-name>
			<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>shiroFilter</filter-name>
			<url-pattern>*.jsp</url-pattern>
			<dispatcher>REQUEST</dispatcher>
			<dispatcher>FORWARD</dispatcher>
		</filter-mapping>
		<filter-mapping>
			<filter-name>shiroFilter</filter-name>
			<url-pattern>*.mvc</url-pattern>
			<dispatcher>REQUEST</dispatcher>
			<dispatcher>FORWARD</dispatcher>
		</filter-mapping>
		<servlet>
			<servlet-name>jcaptcha</servlet-name>
			<servlet-class>com.feinno.module.security.jcaptcha.ImageCaptchaServlet</servlet-class>
		</servlet>
		<servlet-mapping>
			<servlet-name>jcaptcha</servlet-name>
			<url-pattern>/jcaptcha.jpg</url-pattern>
		</servlet-mapping>	
		-->

	<!--Spring Dispatch Servlet,Spring MVC的入口，按servlet-name, 载入springmvc-servlet.xml-->
	<!-- Spring MVC Servlet -->
	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/spring/acooly/core/springmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>	
	
	
	<!-- acooly-module-webservice:CXF WebService -->
	<!-- 
		<servlet>
			<servlet-name>CXFServlet</servlet-name>
			<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		</servlet>
		<servlet-mapping>
			<servlet-name>CXFServlet</servlet-name>
			<url-pattern>/services/*</url-pattern>
		</servlet-mapping>
		-->
	
	<!--session 超时定义-->
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>

	<!--默认首页定义-->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
</web-app>